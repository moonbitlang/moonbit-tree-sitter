package tonyfettes/tree_sitter/node_types

alias @moonbitlang/core/json as @json

// Values

// Types and methods
pub struct ChildType {
  multiple : Bool
  required : Bool
  types : Array[NodeType]
}
impl Show for ChildType
impl ToJson for ChildType

pub struct NodeType {
  type_ : String
  named : Bool
  payload : NodeTypePayload
}
impl Show for NodeType
impl ToJson for NodeType
impl @json.FromJson for NodeType

pub enum NodeTypePayload {
  Empty
  Supertype(Array[NodeType])
  Normal(Map[String, ChildType], ChildType)
}
impl Show for NodeTypePayload

pub type NodeTypes Array[NodeType]
impl NodeTypes {
  from_json(Json) -> Self!@json.JsonDecodeError
}
impl Show for NodeTypes
impl ToJson for NodeTypes
impl @json.FromJson for NodeTypes

// Type aliases

// Traits

