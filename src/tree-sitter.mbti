package tonyfettes/tree-sitter

// Values

// Types and methods
pub(all) enum InputEncoding {
  UTF8
  UTF16LE
  UTF16BE
  Custom
}

type Language
impl Language {
  load(String, String) -> Self
}

type Node
impl Node {
  child_count(Self) -> Int
  named_child(Self, Int) -> Self
  named_child_count(Self) -> Int
  string(Self) -> String
  type_(Self) -> String
}

type Parser
impl Parser {
  delete(Self) -> Unit
  new() -> Self
  parse[Input : Input, Encoding : DecodeFunction](Self, Input, Encoding) -> Tree
  parse_string(Self, Tree?, String) -> Tree
  set_language(Self, Language) -> Unit
}

type Point

type Tree
impl Tree {
  delete(Self) -> Unit
  root_node(Self) -> Node
}

// Type aliases

// Traits
pub(open) trait DecodeFunction {
  input_encoding(Self) -> InputEncoding
  decode(Bytes, Int) -> Int
}
impl DecodeFunction::input_encoding

trait Input

